//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace SenDev.DashboardsDemo.Module.BusinessObjects
{

	[Persistent(@"DimEntity")]
	public partial class Entity : XPLiteObject
	{
		int fEntityKey;
		[Key(true)]
		public int EntityKey
		{
			get
			{
				return fEntityKey;
			}
			set
			{
				SetPropertyValue<int>(nameof(EntityKey), ref fEntityKey, value);
			}
		}
		string fEntityLabel;
		public string EntityLabel
		{
			get
			{
				return fEntityLabel;
			}
			set
			{
				SetPropertyValue<string>(nameof(EntityLabel), ref fEntityLabel, value);
			}
		}
		int fParentEntityKey;
		public int ParentEntityKey
		{
			get
			{
				return fParentEntityKey;
			}
			set
			{
				SetPropertyValue<int>(nameof(ParentEntityKey), ref fParentEntityKey, value);
			}
		}
		string fParentEntityLabel;
		public string ParentEntityLabel
		{
			get
			{
				return fParentEntityLabel;
			}
			set
			{
				SetPropertyValue<string>(nameof(ParentEntityLabel), ref fParentEntityLabel, value);
			}
		}
		string fEntityName;
		[Size(50)]
		public string EntityName
		{
			get
			{
				return fEntityName;
			}
			set
			{
				SetPropertyValue<string>(nameof(EntityName), ref fEntityName, value);
			}
		}
		string fEntityDescription;
		public string EntityDescription
		{
			get
			{
				return fEntityDescription;
			}
			set
			{
				SetPropertyValue<string>(nameof(EntityDescription), ref fEntityDescription, value);
			}
		}
		string fEntityType;
		public string EntityType
		{
			get
			{
				return fEntityType;
			}
			set
			{
				SetPropertyValue<string>(nameof(EntityType), ref fEntityType, value);
			}
		}
		DateTime fStartDate;
		public DateTime StartDate
		{
			get
			{
				return fStartDate;
			}
			set
			{
				SetPropertyValue<DateTime>(nameof(StartDate), ref fStartDate, value);
			}
		}
		DateTime fEndDate;
		public DateTime EndDate
		{
			get
			{
				return fEndDate;
			}
			set
			{
				SetPropertyValue<DateTime>(nameof(EndDate), ref fEndDate, value);
			}
		}
		string fStatus;
		[Size(50)]
		[ColumnDbDefaultValue("(N'Current')")]
		public string Status
		{
			get
			{
				return fStatus;
			}
			set
			{
				SetPropertyValue<string>(nameof(Status), ref fStatus, value);
			}
		}
		int fETLLoadID;
		public int ETLLoadID
		{
			get
			{
				return fETLLoadID;
			}
			set
			{
				SetPropertyValue<int>(nameof(ETLLoadID), ref fETLLoadID, value);
			}
		}
		DateTime fLoadDate;
		public DateTime LoadDate
		{
			get
			{
				return fLoadDate;
			}
			set
			{
				SetPropertyValue<DateTime>(nameof(LoadDate), ref fLoadDate, value);
			}
		}
		DateTime fUpdateDate;
		public DateTime UpdateDate
		{
			get
			{
				return fUpdateDate;
			}
			set
			{
				SetPropertyValue<DateTime>(nameof(UpdateDate), ref fUpdateDate, value);
			}
		}
		[Association(@"FactStrategyPlanReferencesEntity")]
		public XPCollection<FactStrategyPlan> FactStrategyPlans
		{
			get
			{
				return GetCollection<FactStrategyPlan>(nameof(FactStrategyPlans));
			}
		}
	}

}
